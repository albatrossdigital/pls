<?php
/**
 * @file
 * The module file for owwl_catalog module.
 */

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function owwl_catalog_block_info() {

  $blocks['vufind'] = array(
    'info' => t('Owwl Catalog Search'),
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function owwl_catalog_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'vufind':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Search Our Catalog');
      // The content of the block is typically generated by calling a custom
      // function.
      $form = drupal_get_form('library_catalog_form');
      $block['content'] = drupal_render($form);//theme('owwl_catalog_vufind');
      break;
  }
  return $block;
}


function library_catalog_form($form, &$form_state) {
  $form['search'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'search-submit',
      ),
    ),
  );
  $form['search']['search_inner'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'search-submit-inner',
      ),
    ),
  );
  $form['search']['search_inner']['query'] = array(
    '#type' => 'textfield',
    '#title' => t('Search'),
    '#attributes' => array(
      'placeholder' => t('Search'),
      'class' => array('field-search'),
    ),
  );
  $form['search']['search_inner']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Search',
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#default_value' => 'catalog',
    '#options' => array(
      'catalog' => t('Catalog'),
      'ebooks' => t('eBooks'),
    ),
  );


  // Catalog fields
  $form['qtype'] = array(
    '#type' => 'select',
    '#title' => t('Keyword'),
    '#options' => array(
      'keyword' => 'Keyword',
      'title' => t('Title'),
      'author' => t('Author'),
      'subject' => t('Subject'),
      'series' => t('Series Title'),
      'id|bibcn' => t('Bib Call Number'),
    ),
    '#states' => array(
      'visible' => array(
        ':input[name="type"]' => array('value' => 'catalog'),
      ),
    ),
  );

  $libraries = flight_config_view_data('library_list', 'default');
  $options = array(1 => t('All Locations'));
  foreach ($libraries as $library) {
    if (!empty($library->field_field_library_id)) {
      $options[$library->field_field_library_id[0]['raw']['value']] = $library->node_title;
    }
  }
  $form['locg'] = array(
    '#type' => 'select',
    '#title' => t('Library'),
    '#options' => $options,
    '#states' => array(
      'visible' => array(
        ':input[name="type"]' => array('value' => 'catalog'),
      ),
    ),
  );

  // eBooks (Overdrive) fields
  $form['FullTextField'] = array(
    '#type' => 'select',
    '#title' => t('Keyword'),
    '#options' => array(
      'All' => t('All Fields'),
      'Title' => t('Title'),
      'Creator' => t('Creator'),
      'ISBN' => t('ISBN'),
    ),
    '#states' => array(
      'visible' => array(
        ':input[name="type"]' => array('value' => 'ebooks'),
      ),
    ),
  );

  return $form;
}

function library_catalog_form_submit($form, &$form_state) {
  if ($form_state['values']['type'] == 'vufind'){
    drupal_goto('http://catalog.dclibrary.org/client/en_US/dcpl/search/results?ln=en_US&rt=' . $form_state['values']['category'] . '&qu=' . $form_state['values']['term']);
  } else {
    drupal_goto('search/node/' . $form_state['values']['term']);
  }
}


/**
 * Implements hook_theme().
 */
/*function owwl_catalog_theme() {
  return array(
    'owwl_catalog_vufind' => array(
      'template' => 'owwl_catalog_vufind',
    ),
  );
}*/
